#ifndef SIS_REFERENCE_H
#define SIS_REFERENCE_H

//////////////////////////////////////////////////////////////////////////////////
//	includes
//
#include "sis_core_global.h"
//
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
namespace sis {
//////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////
// Template class for reference
//
template <typename T>
class CReference final
{
public:
	// Constructors and destructor
	inline CReference( T* );
	inline ~CReference() = default;

	// Copy constructor and assignment operator
	inline CReference( CReference const& );
	inline CReference& operator=( CReference const& );

public:
	// Cast operator
	inline operator T&();
	inline operator T const&() const;

	// Data access operator
	inline T& operator*();
	inline T const& operator*() const;

	inline T* operator->();
	inline const T* operator->() const;

private:
	// Members
	T* m_pContent;

};


//////////////////////////////////////////////////////////////////////////////////
} // namespace sis
//////////////////////////////////////////////////////////////////////////////////


// include implementation
#include "sis_reference_imp.h"


#endif // SIS_REFERANCE_H
// end of file
