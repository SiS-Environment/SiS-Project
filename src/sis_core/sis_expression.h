#ifndef SIS_EXPRESSION_H
#define SIS_EXPRESSION_H

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	Includes
//
#include "sis_core_global.h"
#include "sis_context.h"

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace sis {
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// abstract class IExpression
//
class SIS_CORE_EXPORT IExpression
{
public:// Constructor, Destructor
	inline IExpression() = default;

	virtual ~IExpression() = default;

public:// Static Methods

public:// Interface Methods
	virtual offset	Eval(CContext* pContext) = 0;
	virtual SiSType ResultType() = 0;
	virtual void	Init() = 0;

private:// Contents

};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// class CDummyExpression
//
class  CDummyExpression : public IExpression
{
public:// Constructor, Destructor
	inline CDummyExpression() = default;

	~CDummyExpression() = default;

public:// Interface Methods
	virtual offset	Eval(CContext* pContext)
	{
		return 0;
	}
	virtual SiSType ResultType()
	{
		return SiSType::Void;
	}
	virtual void Init()
	{}

private:// Contents

};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// class CAddExpression
//
class  CAddExpression : public IExpression
{
public:// Constructor, Destructor
	inline CAddExpression() = default;

	~CAddExpression() = default;

public:// Interface Methods
	virtual offset	Eval(CContext* pContext)
	{
		return 0;
	}
	virtual SiSType ResultType()
	{
		return SiSType::Void;
	}
	virtual void Init()
	{

	}

private:// Contents

};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} // namespace sis
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // SIS_EXPRESSION_H
