#ifndef SIS_BUFFER_H
#define SIS_BUFFER_H

////////////////////////////////////////////////////////////////////////////
//	includes
//
#include "sis_core_global.h"
//
////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////
namespace sis {
////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////
//
class SIS_CORE_EXPORT CBuffer
{
public:
	// Constructor and destructor
	CBuffer( uint nSize = 0 )
	{
		m_pBuffer = new byte[m_uSize];
	}

	~CBuffer()
	{
		delete m_pBuffer;
	}

	// Copy contructor and assginment operator
	CBuffer( CBuffer const& ) = delete;
	CBuffer& operator=( CBuffer const& ) = delete;

public:
	inline byte& operator[]( uint64 i )
	{
		return m_pBuffer[i];
	}

	inline byte const& operator[]( uint64 i ) const
	{
		return m_pBuffer[i];
	}

	inline uint64 GetSize() const
	{
		return m_uSize;
	}

private:
	// Members
	byte*	m_pBuffer;
	uint64	m_uSize;
};



////////////////////////////////////////////////////////////////////////////////////
} // namespace sis
////////////////////////////////////////////////////////////////////////////////////


#endif //SIS_BUFFER_H
// end of file
