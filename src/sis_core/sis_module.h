#ifndef SIS_MODULE_H
#define SIS_MODULE_H

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	Includes
//
#include "sis_core_global.h"

// STL Includes
#include <iostream>
#include <string>
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef unsigned int uint;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace sis {
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// class CModule
//
class CModule final
{
public:
	// Type definitions
	typedef uint FuncId;
public:// Constructor, Destructor
	inline CModule( std::string const& strExecuteFilePath = std::string() );
	~CModule() = default;

public:// Interface Methodes
	inline void Run();
	static SIS_CORE_API void Run(std::string const& strExecuteFilePath);

private:// Contents
	std::string const m_cstrExecuteFilePath;
};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// class CModuleRef
//
class CModuleRef final
{
public:
	// Constructor, Destructor
	inline CModuleRef( CModule* );
	~CModuleRef() = default;

public:
	// Interface Methodes

private:// Contents
	CModule* m_pModule;
};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////// Implementing Inline Methods //////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// class CModule
//

// Constructor, Destructor
inline CModule::CModule( std::string const& strExecuteFilePath )
	: m_cstrExecuteFilePath( strExecuteFilePath )
{}

// Interface Methodes
inline void CModule::Run()
{
	Run( m_cstrExecuteFilePath );
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} // namespace sis
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // SIS_MODULE_H
