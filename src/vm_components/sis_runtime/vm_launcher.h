#ifndef VM_RUNTIME_H
#define VM_RUNTIME_H

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	Includes
//
#include "vm_runtime_global.h"

// STD Includes
#include <iostream>
#include <string>
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace sis {
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace vm {
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// class CLauncher
//
class CLauncher final
{
public:// Constructor, Destructor
	inline CLauncher( std::string const& strExecuteFilePath = std::string() );
	~CLauncher() = default;

public:// Interface Methodes
	inline void Run();
	static VM_RUNTIME_API void Run( std::string const& strExecuteFilePath );

private:// Contents
	std::string const m_cstrExecuteFilePath;
};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////// Implementing Inline Methods //////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// class CLauncher
//

// Constructor, Destructor
inline CLauncher::CLauncher( std::string const& strExecuteFilePath )
	: m_cstrExecuteFilePath( strExecuteFilePath )
{}

// Interface Methodes
inline void CLauncher::Run()
{
	Run( m_cstrExecuteFilePath );
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} // namespace vm
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} // namespace sis
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // VM_RUNTIME_H
