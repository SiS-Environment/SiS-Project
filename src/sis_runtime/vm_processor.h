#ifndef VM_PROCESSOR_H
#define VM_PROCESSOR_H

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//	inlcudes
//

//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace sis {
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace vm {
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


class CFuntion;
class CContext;


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//	class CProcessor
//
class CProcessor
{
public: // constructors, destructor
	CProcessor();
	~CProcessor();

	// copy constructor and assignment operator
	CProcessor( const CProcessor& ) = delete;
	CProcessor& operator=( const CProcessor& ) = delete;

public: //	interface methods
	void Run( CFuntion* pFunction );
	void Enter( CContext* pContext );

	// TODO will be added StepInto, StepOver and StepOut functions for debuging

};
//	CController
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} // namespace vm
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} // namespace sis
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


#endif // VM_PROCESSOR_H
// end of file
