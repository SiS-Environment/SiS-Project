#ifndef BUFFER
#define BUFFER

namespace sis {
////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////
namespace vm {
////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////
//
typedef unsigned int uint;
//
////////////////////////////////////////////////////////////////////////////
class CBuffer
{
public:
/////////////////////////////////////////////////////////////
	CBuffer( uint nSize = 0 )
	{
		m_pBuffer=new char[m_uSize];
	}
	~CBuffer()
	{
		delete m_pBuffer;
	}
//	inline CBuffer( char* pBuffer, uint uSize );
public:
	inline char& operator[]( uint i )
	{
		return m_pBuffer[i];
	}
	inline uint getSize() const
	{
		return m_uSize;
	}
private:
	char*	m_pBuffer;
	uint	m_uSize;
};


////////////////////////////////////////////////////////////////////////////////////
} // namespace vm
////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////
} // namespace sis
////////////////////////////////////////////////////////////////////////////////////


#endif //BUFFER