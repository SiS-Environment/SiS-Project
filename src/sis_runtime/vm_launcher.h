#ifndef VM_LAUNCHER_H
#define VM_LAUNCHER_H

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	Includes
//
#include "vm_runtime_global.h"

// STL Includes
#include <iostream>
#include <string>
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace sis {
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace vm {
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// class CLauncher
//
class SIS_RUNTIME_EXPORT CLauncher final
{
public:// Constructor, Destructor
	inline CLauncher( std::string const& strExecuteFilePath = std::string() );
	~CLauncher() = default;

public:// Interface Methods
	inline void Run();
	static void Run(std::string const& strExecuteFilePath);

private:// Contents
	std::string const m_cstrExecuteFilePath;
};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////// Implementing Inline Methods //////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// class CLauncher
//

// Constructor, Destructor
inline CLauncher::CLauncher( std::string const& strExecuteFilePath )
	: m_cstrExecuteFilePath( strExecuteFilePath )
{}

// Interface Methods
inline void CLauncher::Run()
{
	Run( m_cstrExecuteFilePath );
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} // namespace vm
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} // namespace sis
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // VM_LAUNCHER_H
