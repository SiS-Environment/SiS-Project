#ifndef DBG_DEBUGGER_H
#define DBG_DEBUGGER_H

//////////////////////////////////////////////////////////////////////////////////
//	Includes
//
#include "dbg_debugger_global.h"
#include <vm_controller.h>
//
//////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////
namespace sis {
//////////////////////////////////////////////////////////////////////////////////
namespace dbg {
//////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////
//	class Debugger
//
class SIS_DEBUGER_EXPORT CDebugger final
{
public:
	// Constructors and destructor
	CDebugger( vm::CController* );
	~CDebugger() = default;

	// Copy constructor and assignment operator
	CDebugger( CDebugger const& ) = delete;
	CDebugger& operator=( CDebugger const& ) = delete;

public:
	// Interface methods
	void Start();
	void StepInto();
	void StepOver();

private:
	// Members
	vm::CController* m_pController;
};


//////////////////////////////////////////////////////////////////////////////////
} // namespace dbg
//////////////////////////////////////////////////////////////////////////////////
} // namespace sis
//////////////////////////////////////////////////////////////////////////////////


#endif // DBG_DEBUGGER_H
// end of file
